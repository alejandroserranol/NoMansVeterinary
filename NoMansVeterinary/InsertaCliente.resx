<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABRrk4AW6RZAFCv
        TABQr0wAUK9NAFCvTABQr0wAUa5MAFCvTABRrkwAXqFaAFOsTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEu0SwBJtksAUK9MAFCv
        TAAl2RoAUK9MFlCvTDRQr01LUK9MV1CvTFdRrkxLUK9MNFGuTBYd4RkAUK9MAE+wTABQr1IAUK9QAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQr00ATrFNAFGu
        TQBQr0sHUK9MOVGuTIpQr0y/UK9M3VCvTPRQr0z/UK9M/1CvTPRQr0zdUK9Mv1CvTIlPsEw5TrFMB1Cv
        SwBQr08AUK9NAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVqlUATrFHAFGu
        TQBLtDoAUK9MLlCvTJVQr0zoUK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1Cv
        TOhQr0yUUK9NLU+wQgBPsEwAVKtPAEa5RgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE+w
        SABSrUgAVqlHBFCvTFVQr0zRUK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1Cv
        TP9Qr0z/UK9M/1CvTP9Qr0zQUK9LVFKtRQRVqk4AVapRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABPsEwAUa5NAFWqUQNRrkxnUK9M6FCvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1Cv
        TP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0znT7BMZlapVQJQr00AUK9NAAAAAAAAAAAAAAAAAAAA
        AAAAAAAASbZJAE2ySgB9gmkAUK9NU1CvTOVQr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1Cv
        TP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0zlUK9MUU2yPgBPsE4ATrFOAAAA
        AAAAAAAAAAAAAAAAAABFukcAUa5NAE+wTC1Qr0zRUK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1Cv
        TP9Prkr/Tq5K/06uSv9Prkr/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0zQUK9MLFCv
        TABNsk8AAAAAAAAAAAAAAAAAAAAAAE+wTABOsUwHUK9MlFCvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1Cv
        TP9Pr0v/W7RX/7jetv/D48H/w+PB/7jetv9btFf/T69L/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1Cv
        TP9Qr0ySUK9NB1CvTAAAAAAAAAAAAAAAAABQr00AUK9MAE+wTDdQr0zoUK9M/1CvTP9Qr0z/UK9M/1Cv
        TP9Qr0z/UK9M/0+vS/9ht13/8vny////////////8vny/2G3Xf9Pr0v/UK9M/1CvTP9Qr0z/UK9M/1Cv
        TP9Qr0z/UK9M/1CvTOdRrk02UK9MAE+wSwAAAAAAAAAAAFmmVgAe3xYAUK9MiFCvTP5Qr0z/UK9M/1Cv
        TP9Qr0z/UK9M/1CvTP9Qr0z/T69L/2C2Xf/v+O7////////////v+O7/YLZd/0+vS/9Qr0z/UK9M/1Cv
        TP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/lCvTIZol2IARrlCAAAAAAAAAAAAUK9MAFCvTBhQr0zBUK9M/1Cv
        TP9Qr0z/UK9M/1CvTP9Pr0v/T69L/0+vS/9Orkr/YLZc/+/37v///////////+/37v9gtlz/Tq5K/0+v
        S/9Pr0v/T69L/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9Mv0+wSxdPsEsAAAAAAAAAAABQr0wAUK9MNlCv
        TN9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1u0V/9ht13/YLZd/2C2XP9vvWz/8Pjw////////////8Pjw/2+9
        bP9gtlz/YLZd/2G3Xf9btFf/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0zeULBNNVCwTAAAAAAAAAAAAFGu
        TABRrkxLUK9M9FCvTP9Qr0z/UK9M/1CvTP9Prkr/uN62//L58v/v+O7/7/fu//D48P/9/v3/////////
        ///9/v3/8Pjw/+/37v/v+O7/8vny/7jetv9Prkr/UK9M/1CvTP9Qr0z/UK9M/1CvTPNQr01LUK9NAAAA
        AAAAAAAAUK9NAFCvTVVQr0z+UK9M/1CvTP9Qr0z/UK9M/06uSv/D48H/////////////////////////
        ////////////////////////////////////////w+PB/06uSv9Qr0z/UK9M/1CvTP9Qr0z/UK9M/lCv
        TFVQr0wAAAAAAAAAAABQr0wAUK9MVVCvTP5Qr0z/UK9M/1CvTP9Qr0z/Tq5K/8Pjwf//////////////
        ///////////////////////////////////////////////////D48H/Tq5K/1CvTP9Qr0z/UK9M/1Cv
        TP9Qr0z+UK9MVVCvTAAAAAAAAAAAAFGuTABRrkxLUK9M9FCvTP9Qr0z/UK9M/1CvTP9Prkr/uN62//L5
        8v/v+O7/7/fu//D48P/9/v3////////////9/v3/8Pjw/+/37v/v+O7/8vny/7jetv9Prkr/UK9M/1Cv
        TP9Qr0z/UK9M/1CvTPRQr01LUK9NAAAAAAAAAAAAUK9MAFCvTDdQr0zgUK9M/1CvTP9Qr0z/UK9M/1Cv
        TP9btFf/Ybdd/2C2Xf9gtlz/b71s//D48P////////////D48P9vvWz/YLZc/2C2Xf9ht13/W7RX/1Cv
        TP9Qr0z/UK9M/1CvTP9Qr0z/UK9M31CvTDZQr0wAAAAAAAAAAABQr0wAUK9MGFCvTMFQr0z/UK9M/1Cv
        TP9Qr0z/UK9M/0+vS/9Pr0v/T69L/06uSv9gtlz/7/fu////////////7/fu/2C2XP9Orkr/T69L/0+v
        S/9Pr0v/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0zAT7BLF0+wSwAAAAAAAAAAAEm2RgAA/wAAUK9Mi1Cv
        TP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/T69L/2C2Xf/v+O7////////////v+O7/YLZd/0+v
        S/9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTIlCvTQAUq1PAAAAAAAAAAAATrFKAFCv
        TABQr006UK9M6lCvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Pr0v/Ybdd//L58v////////////L5
        8v9ht13/T69L/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0zpUa5MOlCvTABQr0wAAAAAAAAA
        AAAAAAAAUK9MAFCvTAlQr0ybUK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/0+vS/9btFf/uN62/8Pj
        wf/D48H/uN62/1u0V/9Pr0v/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTJhSrUsIUa5MAAAA
        AAAAAAAAAAAAAAAAAABNsk8AUK9LAE+wTDFQr0zSUK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1Cv
        TP9Prkr/Tq5K/06uSv9Prkr/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0zQUK9NL1Cv
        SgBRrlMAAAAAAAAAAAAAAAAAAAAAAE6xTgBOsU0AWKdPAFCvTVVQr0zpUK9M/1CvTP9Qr0z/UK9M/1Cv
        TP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M6U+w
        TFNQr0cAUK9PAFGuUQAAAAAAAAAAAAAAAAAAAAAAAAAAAE+wTABQr00AT7BNBFCvTGtQr0zoUK9M/1Cv
        TP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1Cv
        TOdPsExqTbJJBE+wTABQr00AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE2ySABQr0gAWKdHA1Cv
        TFVQr0zRUK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1Cv
        TP9Qr0zQUK9LVFKtRgNSrUsAVKtOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVapVAE6x
        RwBRrk0AS7Q6AFCvTC5Qr0yVUK9M6FCvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1Cv
        TP9Qr0zoUK9MlFCvTS1PsEIAT7BMAFSrTwBGuUYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFCvTQBOsU0AUa5NAFCvSwdQr0w5Ua5MilCvTL9Qr0zdUK9M9FCvTPtQr0z7UK9M9FCv
        TN1Qr0y/UK9MiU+wTDlOsUwHUK9LAFCvTwBQr00AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEu0SwBJtksAUK9MAFCvTAAl2RoAUK9MFlCvTDRQr01LUK9MU1Cv
        TFNRrkxLUK9MNFGuTBYd4RkAUK9MAE+wTABQr1IAUK9QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUa5OAFukWQBQr0wAUK9MAFCv
        TQBQr0wAUK9MAFGuTABQr0wAUa5MAF6hWgBTrE8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////AA//+AAB//AAAP/AAAA/wAAAP4AAAB8AAAAPAAAADwAAAA4AA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAcAAAAPAAAADwAAAA+AA
        AAfwAAAP8AAAD/wAAD/+AAB//8AD//////8=
</value>
  </data>
</root>